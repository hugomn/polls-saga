{"version":3,"sources":["components/Question/actions.js","components/Question/reducers.js","service/api.js","components/Question/sagas.js","components/Question/actionCreators.js","sagas.js","reducers.js","components/Question/QuestionCard/template.js","components/Question/QuestionCard/index.js","components/Question/QuestionList/template.js","components/Question/QuestionList/index.js","components/Question/QuestionDetail/template.js","components/Question/QuestionDetail/index.js","routes.js","components/App/index.js","components/App/template.jsx","index.js"],"names":["QUESTION_CHOICE_SELECTED","QUESTION_CHOICE_VOTE_REQUESTED","QUESTION_CHOICE_VOTE_SUCEEDED","QUESTION_CHOICE_VOTE_FAILED","QUESTION_FETCH_REQUESTED","QUESTION_FETCH_SUCCEEDED","QUESTION_FETCH_FAILED","QUESTION_SHOW_DETAIL","QUESTIONS_FETCH_REQUESTED","QUESTIONS_FETCH_SUCCEEDED","QUESTIONS_FETCH_FAILED","initialState","items","getTotalVotes","question","choices","reduce","total","choice","votes","reducer","newChoice","state","arguments","length","undefined","action","type","actions","payload","Object","objectSpread","activeQuestion","selectedChoice","map","url","api","getQuestion","id","axios","get","concat","getQuestions","postChoice","choiceUrl","post","voteQuestion","fetchQuestion","fetchQuestions","showDetail","sagas","_ref","res","regenerator_default","a","wrap","_context","prev","next","call","sent","put","data","t0","stop","_marked","this","_ref2","_context2","_marked2","_context3","_marked3","_ref3","_context4","push","_marked4","_context5","all","takeLatest","_marked5","root","fork","questionSaga","sagas_marked","history","QuestionCard","handleClick","_this","props","react_default","createElement","Card","fluid","onClick","Content","Header","Meta","Date","published_at","toLocaleString","Description","Component","connect","dispatch","template","QuestionList","questions","Fragment","Container","as","Grid","stackable","Column","computer","tablet","mobile","key","Question_QuestionCard","Loader","active","size","inline","style","marginTop","QuestionDetail","handleChoiceClick","selectChoice","handleVoteSubmit","choiceVote","renderChoice","_activeQuestion$selec","selected","Table","Row","positive","Cell","collapsing","textAlign","Radio","checked","Progress","value","precision","indicating","match","params","_this2","Divider","hidden","celled","definition","selectable","Body","Footer","fullWidth","HeaderCell","colSpan","Button","floated","labelPosition","icon","primary","disabled","Icon","name","actionCreators","Routes","Switch","Route","exact","path","component","className","routes_Routes","sagaMiddleware","createSagaMiddleware","createBrowserHistory","basename","composeEnhancers","compose","store","createStore","combineReducers","router","connectRouter","questionReducer","applyMiddleware","routerMiddleware","run","ReactDOM","render","es","esm","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.95483e6e.chunk.js","sourcesContent":["export const QUESTION_CHOICE_SELECTED = \"QUESTION_CHOICE_SELECTED\";\nexport const QUESTION_CHOICE_VOTE_REQUESTED = \"QUESTION_CHOICE_VOTE_REQUESTED\";\nexport const QUESTION_CHOICE_VOTE_SUCEEDED = \"QUESTION_CHOICE_VOTE_SUCEEDED\";\nexport const QUESTION_CHOICE_VOTE_FAILED = \"QUESTION_CHOICE_VOTE_FAILED\";\nexport const QUESTION_FETCH_REQUESTED = \"QUESTION_FETCH_REQUESTED\";\nexport const QUESTION_FETCH_SUCCEEDED = \"QUESTION_FETCH_SUCCEEDED\";\nexport const QUESTION_FETCH_FAILED = \"QUESTION_FETCH_FAILED\";\nexport const QUESTION_SHOW_DETAIL = \"QUESTION_SHOW_DETAIL\";\nexport const QUESTIONS_FETCH_REQUESTED = \"QUESTIONS_FETCH_REQUESTED\";\nexport const QUESTIONS_FETCH_SUCCEEDED = \"QUESTIONS_FETCH_SUCCEEDED\";\nexport const QUESTIONS_FETCH_FAILED = \"QUESTIONS_FETCH_FAILED\";\n","import * as actions from \"components/Question/actions\";\n\nexport const initialState = {\n  items: []\n};\n\nconst getTotalVotes = question => {\n  return question.choices.reduce((total, choice) => total + choice.votes, 0);\n};\n\nconst updateChoice = (choices, newChoice) => {\n  return choices.map(\n    choice => (choice.url === newChoice.url ? newChoice : choice)\n  );\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.QUESTION_FETCH_SUCCEEDED:\n      const question = action.payload.question;\n      return {\n        ...state,\n        activeQuestion: {\n          total: getTotalVotes(question),\n          selectedChoice: undefined,\n          ...question\n        }\n      };\n    case actions.QUESTION_CHOICE_VOTE_SUCEEDED:\n      const choice = action.payload.choice;\n      return {\n        ...state,\n        activeQuestion: {\n          ...state.activeQuestion,\n          total: getTotalVotes(state.activeQuestion),\n          choices: updateChoice(state.activeQuestion.choices, choice),\n          selectedChoice: undefined\n        }\n      };\n    case actions.QUESTION_CHOICE_SELECTED:\n      return {\n        ...state,\n        activeQuestion: {\n          ...state.activeQuestion,\n          selectedChoice: action.payload.choice\n        }\n      };\n    case actions.QUESTIONS_FETCH_SUCCEEDED:\n      return { ...state, ...action.payload };\n    case actions.QUESTION_SHOW_DETAIL:\n      return {\n        ...state,\n        activeQuestion: undefined\n      };\n    case actions.QUESTION_FETCH_REQUESTED:\n    case actions.QUESTIONS_FETCH_REQUESTED:\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import axios from \"axios\";\n\nconst url = \"https://polls.apiblueprint.org\";\n\nconst api = {\n  getQuestion: function(id) {\n    return axios.get(`${url}/questions/${id}`);\n  },\n  getQuestions: function() {\n    return axios.get(`${url}/questions`);\n  },\n  postChoice: function(choiceUrl) {\n    return axios.post(`${url}${choiceUrl}`);\n  }\n};\n\nexport default api;\n","import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport * as actions from \"components/Question/actions\";\nimport * as actionCreators from \"components/Question/actionCreators\";\nimport api from \"service/api\";\nimport { push } from \"connected-react-router\";\n\nexport function* voteQuestion({ payload }) {\n  try {\n    const res = yield call(api.postChoice, payload.choice.url);\n    yield put(actionCreators.choiceVoteSucceeded(res.data));\n  } catch (err) {\n    yield put(actionCreators.choiceVoteFailed(err));\n  }\n}\n\nexport function* fetchQuestion({ payload }) {\n  try {\n    const res = yield call(api.getQuestion, payload.id);\n    yield put(actionCreators.fetchQuestionSucceeded(res.data));\n  } catch (err) {\n    yield put(actionCreators.fetchQuestionFailed(err));\n  }\n}\n\nexport function* fetchQuestions() {\n  try {\n    const res = yield call(api.getQuestions);\n    yield put(actionCreators.fetchQuestionsSucceeded(res.data));\n  } catch (err) {\n    yield put(actionCreators.fetchQuestionsFailed(err));\n  }\n}\n\nexport function* showDetail({ payload }) {\n  yield put(push(payload.question.url));\n}\n\nfunction* sagas() {\n  yield all([\n    takeLatest(actions.QUESTION_SHOW_DETAIL, showDetail),\n    takeLatest(actions.QUESTION_CHOICE_VOTE_REQUESTED, voteQuestion),\n    takeLatest(actions.QUESTION_FETCH_REQUESTED, fetchQuestion),\n    takeLatest(actions.QUESTIONS_FETCH_REQUESTED, fetchQuestions)\n  ]);\n}\n\nexport default sagas;\n","import * as actions from \"./actions\";\n\nexport function fetchQuestionRequested(id) {\n  return {\n    type: actions.QUESTION_FETCH_REQUESTED,\n    payload: { id }\n  };\n}\n\nexport function choiceSelected(choice) {\n  return {\n    type: actions.QUESTION_CHOICE_SELECTED,\n    payload: { choice }\n  };\n}\n\nexport function choiceVoteRequested(choice) {\n  return {\n    type: actions.QUESTION_CHOICE_VOTE_REQUESTED,\n    payload: { choice }\n  };\n}\n\nexport function choiceVoteSucceeded(choice) {\n  return {\n    type: actions.QUESTION_CHOICE_VOTE_SUCEEDED,\n    payload: { choice }\n  };\n}\n\nexport function choiceVoteFailed() {\n  return {\n    type: actions.QUESTION_CHOICE_VOTE_FAILED\n  };\n}\n\nexport function fetchQuestionSucceeded(question) {\n  return {\n    type: actions.QUESTION_FETCH_SUCCEEDED,\n    payload: { question }\n  };\n}\n\nexport function fetchQuestionFailed() {\n  return {\n    type: actions.QUESTION_FETCH_FAILED\n  };\n}\n\nexport function fetchQuestionsRequested() {\n  return {\n    type: actions.QUESTIONS_FETCH_REQUESTED\n  };\n}\n\nexport function fetchQuestionsSucceeded(items) {\n  return {\n    type: actions.QUESTIONS_FETCH_SUCCEEDED,\n    payload: { items }\n  };\n}\n\nexport function fetchQuestionsFailed() {\n  return {\n    type: actions.QUESTIONS_FETCH_FAILED\n  };\n}\n\nexport function showDetail(question) {\n  return {\n    type: actions.QUESTION_SHOW_DETAIL,\n    payload: { question }\n  };\n}\n","import { all, fork } from \"redux-saga/effects\";\nimport questionSaga from \"components/Question/sagas\";\n\nexport default function* root() {\n  yield all([fork(questionSaga)]);\n}\n","import { combineReducers } from \"redux\";\nimport questionReducer from \"components/Question/reducers\";\nimport { connectRouter } from 'connected-react-router'\n\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  questions: questionReducer\n});\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card } from \"semantic-ui-react\";\n\nclass QuestionCard extends Component {\n  static propTypes = {\n    question: PropTypes.object,\n    showDetail: PropTypes.func\n  };\n\n  handleClick = () => {\n    this.props.showDetail(this.props.question);\n  };\n\n  render() {\n    const { question } = this.props;\n    return (\n      <Card fluid onClick={this.handleClick}>\n        <Card.Content>\n          <Card.Header>{question.question}</Card.Header>\n          <Card.Meta>\n            {new Date(question.published_at).toLocaleString()}\n          </Card.Meta>\n          <Card.Description>{question.choices.length} choices</Card.Description>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nexport default QuestionCard;\n","import { connect } from \"react-redux\";\nimport { showDetail } from \"components/Question/actionCreators\";\nimport template from \"./template\";\n\nconst mapStatetoProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showDetail: question => {\n      dispatch(showDetail(question));\n    }\n  };\n};\n\nexport default connect(\n  mapStatetoProps,\n  mapDispatchToProps\n)(template);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid, Container, Header, Loader } from \"semantic-ui-react\";\nimport QuestionCard from \"components/Question/QuestionCard\";\n\nclass QuestionList extends Component {\n  static propTypes = {\n    getQuestions: PropTypes.func,\n    questions: PropTypes.array\n  };\n\n  componentDidMount() {\n    this.props.getQuestions();\n  }\n\n  render() {\n    const { questions } = this.props;\n    return (\n      <React.Fragment>\n        <Container>\n          <Header as=\"h1\">Questions</Header>\n          <Grid stackable>\n            {questions.length ? (\n              questions.map(question => (\n                <Grid.Column\n                  computer={4}\n                  tablet={8}\n                  mobile={16}\n                  key={question.url}\n                >\n                  <QuestionCard question={question} />\n                </Grid.Column>\n              ))\n            ) : (\n              <Loader\n                active\n                size=\"large\"\n                inline=\"centered\"\n                style={{ marginTop: \"250px\" }}\n              >\n                Loading...\n              </Loader>\n            )}\n          </Grid>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default QuestionList;\n","import { connect } from \"react-redux\";\nimport { fetchQuestionsRequested } from \"components/Question/actionCreators\";\nimport template from \"./template\";\n\nconst mapStatetoProps = state => {\n  return {\n    questions: state.questions.items || []\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuestions: () => {\n      dispatch(fetchQuestionsRequested());\n    }\n  };\n};\n\nexport default connect(\n  mapStatetoProps,\n  mapDispatchToProps\n)(template);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Divider,\n  Container,\n  Header,\n  Icon,\n  Progress,\n  Radio,\n  Loader,\n  Table\n} from \"semantic-ui-react\";\n\nclass QuestionDetail extends Component {\n  static propTypes = {\n    activeQuestion: PropTypes.object,\n    choiceVote: PropTypes.func,\n    getQuestion: PropTypes.func,\n    match: PropTypes.object,\n    selectChoice: PropTypes.func\n  };\n\n  componentDidMount() {\n    this.props.getQuestion(this.props.match.params.id);\n  }\n\n  handleChoiceClick = choice => {\n    this.props.selectChoice(choice);\n  };\n\n  handleVoteSubmit = () => {\n    this.props.choiceVote(this.props.activeQuestion.selectedChoice);\n  };\n\n  renderChoice = choice => {\n    const { activeQuestion } = this.props;\n    const { selectedChoice = {} } = activeQuestion;\n    const selected = choice.url === selectedChoice.url;\n    return (\n      <Table.Row\n        key={choice.url}\n        onClick={() => this.handleChoiceClick(choice)}\n        positive={selected}\n      >\n        <Table.Cell collapsing textAlign=\"center\">\n          <Radio checked={selected} />\n        </Table.Cell>\n        <Table.Cell>{choice.choice}</Table.Cell>\n        <Table.Cell>{choice.votes} votes</Table.Cell>\n        <Table.Cell>\n          <Progress\n            total={activeQuestion.total}\n            value={choice.votes}\n            precision={0}\n            indicating\n          />\n        </Table.Cell>\n      </Table.Row>\n    );\n  };\n\n  render() {\n    const { activeQuestion } = this.props;\n    if (activeQuestion) {\n      return (\n        <React.Fragment>\n          <Container>\n            <Header as=\"h1\">Questions detail</Header>\n            <Header as=\"h2\">Question: {activeQuestion.question}</Header>\n            <Divider hidden />\n            <Table celled definition selectable>\n              <Table.Body>\n                {activeQuestion.choices.map(choice =>\n                  this.renderChoice(choice)\n                )}\n              </Table.Body>\n\n              <Table.Footer fullWidth>\n                <Table.Row>\n                  <Table.HeaderCell />\n                  <Table.HeaderCell colSpan=\"4\">\n                    <Button\n                      floated=\"right\"\n                      labelPosition=\"left\"\n                      icon\n                      primary\n                      disabled={!activeQuestion.selectedChoice}\n                      onClick={this.handleVoteSubmit}\n                    >\n                      <Icon name=\"add\" /> Save Vote\n                    </Button>\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Footer>\n            </Table>\n          </Container>\n        </React.Fragment>\n      );\n    }\n    return (\n      <Loader\n        active\n        size=\"large\"\n        inline=\"centered\"\n        style={{ marginTop: \"250px\" }}\n      >\n        Loading...\n      </Loader>\n    );\n  }\n}\n\nexport default QuestionDetail;\n","import { connect } from \"react-redux\";\nimport * as actionCreators from \"components/Question/actionCreators\";\nimport template from \"./template\";\n\nconst mapStateToProps = state => {\n  return {\n    activeQuestion: state.questions.activeQuestion\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuestion: id => {\n      dispatch(actionCreators.fetchQuestionRequested(id));\n    },\n    choiceVote: choice => {\n      dispatch(actionCreators.choiceVoteRequested(choice));\n    },\n    selectChoice: choice => {\n      dispatch(actionCreators.choiceSelected(choice));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(template);\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport QuestionList from \"components/Question/QuestionList\";\nimport QuestionDetail from \"components/Question/QuestionDetail\";\n\nexport default class Routes extends Component {\n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={QuestionList} />\n          <Route path=\"/questions/:id\" component={QuestionDetail} />\n        </Switch>\n      </div>\n    );\n  }\n}\n","import template from \"./template\";\n\nexport default template;\n","import React, { Component } from \"react\";\nimport Routes from \"routes\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Routes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { createBrowserHistory } from \"history\";\nimport createSagaMiddleware from \"redux-saga\";\nimport {\n  ConnectedRouter,\n  routerMiddleware\n} from \"connected-react-router\";\nimport createRootReducer from './reducers'\nimport sagas from \"./sagas\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst history = createBrowserHistory({ basename: '/react-redux-saga-starter' });\n\nlet composeEnhancers = compose;\n\nif (process.env.NODE_ENV === \"development\") {\n  const composeWithDevToolsExtension =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n  if (typeof composeWithDevToolsExtension === \"function\") {\n    composeEnhancers = composeWithDevToolsExtension;\n  }\n}\n\nconst store = createStore(\n  createRootReducer(history),\n  composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware))\n);\n\nsagaMiddleware.run(sagas);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}